.text-center
    .page-header
        h2 Game Development Projects
.container-fluid
    .text-center
        h3 BrickBreakout
    .row
        .col-sm-6.text-center
            img(src='/images/portfolio/brickbreakout.gif', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='https://github.com/james-woo/BrickBreakout')
                i.fa.fa-github.fa-2x
            p.
                A brick breaker game created using C++ and SDL2 graphics library on Mac OSX.

            h4 Features
            ul#list-items
                li Simulated physics, three lives, and scoring system
                li Press space to start
                li Move paddle with your mouse
            p.
                Technologies involved: C++, SDL
    br
    .text-center
        h3 PongPong
    .row
        .col-sm-6.text-center
            img(src='/images/portfolio/pongpong.gif', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='https://github.com/james-woo/PongPong')
                i.fa.fa-github.fa-2x
            p.
                A very simple Pong game created using C++ and SDL2 graphics library on Mac OSX.

            h4 Features
            ul#list-items
                li Play endlessly against a pro MLG AI
                li Press space to start
                li Move paddle with your mouse
            p.
                Technologies involved: C++, SDL
    br
.text-center
    .page-header
        h2 Mobile Development Projects
.container-fluid
    .text-center
        h3 Athelite
    .row
        .col-sm-6.text-center
            img(src='/images/portfolio/athelite.png', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='http://james-woo.github.io/athelite/')
                i.fa.fa-github.fa-2x
            p.
                The application is available on Google Playstore!
                
            a(href='https://play.google.com/store/apps/details?id=com.athelite&hl=en&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1') 
                img(alt='Get it on Google Play', src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png', width='25%')

            p.
                Athelite is a simple workout tracking android application. No ads, no added complexity, just a simple workout logger anyone can use.

                Athelite is free, open source, and will remain free forever!
            
            h4 Features
            ul#list-items
                li Create templates. Design your own custom workout templates that you can copy over to each daily workout
                li Edit your workouts. Reached an even higher goal? Track it, edit it!
                li Track your workouts. Track which days you have and are planning to workout
                li Notifications. Get notifications of your upcoming workouts
                li See progress. A simple graph tracking your exercises is provided
                li Personalize your experience. Supply personal information to allow the application to track your progress
            p.
                Technologies involved: Android Studio, SQLite, Travis CI, Google Developer Console
    br
    .text-center
        h3 Random Activity Finder
    .row
        .col-sm-6.text-center
            img(src='/images/portfolio/randomactivityfinder.png', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='http://github.com/james-woo/randomactivityfinder')
                i.fa.fa-github.fa-2x
            &nbsp;&nbsp;
            a.btn-social.btn-outline(href='https://www.youtube.com/watch?v=2Ul0iUTwc5E')
                i.fa.fa-youtube.fa-2x
            p.
                Version 1.0 is done! It took me one week to finish the app, I have learned so much, and am very
                pleased to introduce Random Activity Finder 1.0!
            p.
                Random Activity Finder takes your current location and provides the user with a random activity to do
                around them. This application uses Yelp's API to provide users with the activity, rating, distance,
                and other information that they may find useful. I used Android Studio to develop the application and
                currently utilizes Google Maps to get directions from the user's current location to the activity's address.
                Though I ran into several debugging problems, I managed to fix them thanks to the abundant Android
                developers who have ran into the same problems I have. I have used several resources to help me get
                started and are listed below.
            p.
                Technologies involved: Android Studio, Yelp API, Google Maps API
    br
.text-center
    .page-header
        h2 Web Development Projects
.container-fluid
    .text-center
        h3 Meals For The Moment
    .row
        .col-sm-6
            img(src='/images/portfolio/mftm.png', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='http://mftm.herokuapp.com')
                i.fa.fa-external-link.fa-2x
            &nbsp;&nbsp;
            a.btn-social.btn-outline(href='http://github.com/james-woo/mftm')
                i.fa.fa-github.fa-2x
            p.
                Meals For The Moment is a web application built using the MEAN stack for my Software Engineering Requirements course.
                We receive a clients (student group) RFP, in which we create a requirements specification document. In addition to this, I have created
                a web application to show as a demo to the client.

                The application uses the user's location to determine local ingredients and provides recipes based on those ingredients.
                Additionally, users are able to further refine their recommendations with the use of preferences.
            p Future Implementations
            ul#list-items
                li Third party recipe database. Use a recipe database to provide real recipes.
                li User functionality. Users could sign up and provide their own recipes, rate recipes, etc.
            p.
                Technologies involved: MongoDB, Express, AngularJS, Node.JS, MapBox, Heroku
    br
    .text-center
        h3 Reported
    .row
        .col-sm-6
            img(src='/images/portfolio/reported.png', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='http://reported.herokuapp.com')
                i.fa.fa-external-link.fa-2x
            &nbsp;&nbsp;
            a.btn-social.btn-outline(href='http://github.com/james-woo/reported')
                i.fa.fa-github.fa-2x
            p.
                Reported is a community driven break-in and theft tracker in your area. Add reports to this map to inform others on recent events.
                When you first load the website, it will ask you for your location. If you click "Allow", the map will pan to your area.
                To use this application, click a point on the map where you would like to create a report. Add your name, email, and a short description of the incident. If you'd like, you can add an url to a photo for a better description.
                Your data point will be displayed on the map for all others to see. Once the page reloads, your new data point will be displayed and the map will pan to it. If you'd like, you can take this moment to delete it.
                Zoom in to view datapoints if they are shown in a cluster. Click on a datapoint to see information about it.
            p Future Implementations
            ul#list-items
                li User accounts. Users would be able to view all their own points, delete and edit them.
                li Alerts. Users could sign up for alerts for activities in their area
                li Contact form. If anyone has information related to a reported point, they could send the original poster a message.
                li Image upload. Users should be able to upload one (or more) photos to our server instead of having to use some other image hosting service.
                li Improved Security. For example, nothing is stopping someone from adding a ton of fake datapoints with a denial of service attack. Additionally, forms are not currently checked for data integrity (e.g. adding a url to a non-existing photo)
            p.
                Technologies involved: MongoDB, Express, AngularJS, Node.JS, MapQuest, Leafletjs, Heroku
    .text-center
        h3 James' Locations
    .row
        .col-sm-6
            img(src='/images/portfolio/jameslocation.png', width='100%')
        .col-sm-6
            a.btn-social.btn-outline(href='http://james-locations.herokuapp.com')
                i.fa.fa-external-link.fa-2x
            &nbsp;&nbsp;
            a.btn-social.btn-outline(href='http://github.com/james-woo/locations')
                i.fa.fa-github.fa-2x
            p.
                A little side project I was working on to learn how Spring Boot applications are built. James' Locations is a small web application which shows where
                James has been on Earth. Each point represents a time in which James has visited that location, with a given description, time, coordinate, and photo.

            p Future Implementations
            ul#list-items
                li Authentication. Only James should be able to edit and view these locations
                li Images on points. Rather than boring points, they could have a small image associated with the location.
                li Clustering. Clustering of points is easier on the eyes.
            p.
                Technologies involved: Spring Boot, Maven, AngularJS, MapBox, Leafletjs, Heroku
    br